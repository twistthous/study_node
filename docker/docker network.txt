docker network
	单机
		1.Bridge Network
			容器都连接到了docker0的bridge上
		2.Host Network
		3.None Network
		
	多级
		1.Overlay Network
		
docker network命令
	1.查看docker的网络
	sudo dokcer network ls
	2.
	sudo yum install bridge-utils
	brctl
	brctl show

docker link实操
	sudo docker run -d --name test2 --link test1 busybox /bin/sh -c ""
	sudo docker exec -it test2 /bin/bash => 可以直接(ping test1)这个容器
	
	//创建一个网络
	sudo docker network create -d bridge my-bridge
	sudo docker run -d --name test3 --network my-bridge busybocx /bin/bash ""
	sudo docker network connect my-bridge test2
	
	//端口映射
	sudo docker run --name web -d -p 80:80 nginx (容器:外部   )
	
	
Vagrant
	1.Vagrantfile
	  

基础的网络概念
	网络地址转换 -> NAT
	ip 检查ip可达性
	telnet 验证服务可用性
	wireshark抓包工具
	
创建network namespace 
	1.sudo ip netns list
	2.sudo ip netns delete test1
	3.sudo ip netns add test1
	4.sudo ip netns exec test1 ip a
	5.ip link
	6.sudo ip netns exec test1 ip link //端口是down
	7.sudo ip netns exec test1 ip link set dev lo up //启动端口
	8.创建veth pair,给两个namespace
	sudo ip link add veth-test1 type veth peer name veth-test2
	sudo ip link set veth-test1 netns test1
	sudo ip netns exec test1 ip link
	sudo ip link set veth-test2 netns test2
	sudo ip netns exec test1 addr add 192.168.1.1/24 dev veth-test1
	sudo ip netns exec test2 addr add 192.168.1.2/24 dev veth-test2
	sudo ip netns exec test1 ip link set dev veth-test1 up
	sudo ip netns exec test2 ip link set dev veth-test2 up
	sudo ip netns exec tes1 ip link